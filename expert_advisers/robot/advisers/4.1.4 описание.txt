общая идея:
1. когда 5я свеча открылась, мы начинаем искать фраткал
2. когда 5я свеча сломала фрактал, то проверяем условия входа, описанные ниже.
3. входим на 6й свече

    *** Strata 4.1.2   1h, 
	1 зелёная 2 красных  ***

1 свеча красная, 
2-зелёная, 
3- неподтвержденная фрактальная красная, 
4 - красная,
5-свеча зелёная. 

 *условие поиска сигнала и цена входа*
1. Если 5 свеча зелёная и закрылась выше либо на середине тени 3 свечи неподтвержденой
фрактальной красной, входим в шорт по цене закрытия 5 свечи зелёной 

2. Если у 5 зелёной свечи расстояние от цены закрытия до хая равно или > расстояния цены
открытия до цены закрытия, тогда в сделку не входим.
иными словами доп. фильтр: (high / close - 1) < (close/open - 1)

* SL и TP *
SL= 1.5% TP = 2%. 

*Перенос TP SL после закрытия свечи*

Если свеча открытия зелёная - тейк переносим в б.у 
В остальных случая, а именно, после 8 свечи, стоп и тейк переносится в б.у.

*Проверка переноса TP SL в каждый момент времени*

!! при достижении профита 1.5% стоп переносим в б.у.
**********************************************************************************************
    *** Strata 4.1.2  30m 
	1 зелёная 2 красных  ***

* SL и TP *
SL= 1% TP = 1%. 

// сделано по текущий момент

*Проверка переноса TP SL в каждый момент времени*

!! при достижении профита +0.8% стоп переносим в б.у.
**********************************************************************************************
    *** Strata 4.1.2   1h 
	3 зелёныx 1 красная  ***

1 свеча зелёная, 
2-зелёная, 
	Vol>1 зеленой и 
	длина свечи>1 зеленой ,
3- неподтвержденная фрактальная зелёная 
	vol > 2 зеленой и 
	длина свечи > 2 зеленой,
4 - красная, 
5-свеча зелёная. 

 *условие поиска сигнала и цена входа*

Если 5 свеча (зелёная) и !закрылась! выше либо на середине тени 4 свечи,  
то входим в шорт по цене закрытия 5 свечи зелёной 

* SL и TP *

SL= 1.5% TP = 2%. 

*Перенос TP SL после закрытия свечи*

Если свеча открытия зелёная  тейк переносим в б.у 
В остальных случая, а именно, после 8 свечи, стоп и тейк переносится в б.у.

*Проверка переноса TP SL в каждый момент времени*

при достижении профита 1.5% стоп переносим в б.у.

**************************************************************************
--------- общие доп условия ---------------
(ok) SL переносим в микро плюс (+0.1)

(х) пока реализовано для каждой монеты в отдельности
входить можем только в одну сделку:
сохраняем состояния сделки в отдельном классе:
1. canDeal = true
2. если вошли в сделку, то false
х 3. если перенесли TP в плюс, то опять true
3. Если стоп в микроплюс уже стоит, тогда можно вторую сделку открывать

(0) == 4.1.4 ==
Предпочтение отдается тому сигналу, в котором 5я зеленая длиннее (между монетами) по open и close. (второй раз Саша сказал между Low и High)

(ок) 3.8.2.6 идет в робота без изменений

(ок) Два сигнала можно сразу только если это 4.1.4 и 3.8.2.6 

---- Иван ---- дополнительные вопросы -----
(ок) расчет размера входа:
1. берем весь депо
2. делим на 3
если п.2 > кол-ва свободных средств, то входим в сделку с 10м плечом
3. проверить

где хранить response?
а если их будет несколько?
храним тогда в монете? 

(ok) включить все 105 монет

---- ЗАДАЧИ ----
-сохраняем все сигналы в отдельном массиве, сверяем где длина тела больше, туда и заходим
== 1. openShortCommon() в конце отправляем в общий класс информацию о: монете, длине 5й свечи, цене входа

2. alex4CanShortPosition - отправляем ордер на биржу

3. alex4CloseShortPosition - отправляем ордер на биржу

(ок) 4. файл getAvailableBalance - вход считаем по usdtBal вместо usdtAvailable

(ок) 5. возвращать фактические цены входа и выхода из рынка
изучить типы всех ордеров



отправлять на биржу ордера с настройками:
- изолированная торговля
- плечо 10х


4.1.2 вход только в одну сделку - но реализовано для каждой монеты в отдельности
4.1.4 вход в сделку по самой длинной 5й свечке

// убрать служебную информацию про web socket
(ок) исправить инфу по прибыли при торговле
// 4.1.4 	фильтрация по 5й свече: low и high
(ок) 4.1.2 убрать сообщение о сломе фрактала
х скачать отчет с бинанс и проверить: изолированная, 10х

---- Telegram API - Отправка Emoji ----
https://ru.stackoverflow.com/questions/497325/telegram-api-%D0%9E%D1%82%D0%BF%D1%80%D0%B0%D0%B2%D0%BA%D0%B0-emoji

https://apps.timwhitlock.info/emoji/tables/unicode

---- New Order (TRADE) ---
https://binance-docs.github.io/apidocs/futures/en/#new-order-trade


------- ордера ----------
 {
      symbol: 'MASKUSDT',
      initialMargin: '0',
      maintMargin: '0',
      unrealizedProfit: '0.00000000',
      positionInitialMargin: '0',
      openOrderInitialMargin: '0',
      leverage: '10', // плечо
      isolated: true, // изолированная
      entryPrice: 0,
      maxNotional: '100000',
      positionSide: 'BOTH',
      positionAmt: 0,
      notional: 0,
      isolatedWallet: 0,
      updateTime: 1665731437113,
      bidNotional: '0',
      askNotional: '0'
    },

  {
      symbol: 'APEUSDT',
      initialMargin: '13.73100000',
      maintMargin: '1.37310000',
      unrealizedProfit: '-5.97000000',
      positionInitialMargin: '13.73100000',
      openOrderInitialMargin: '0',
      leverage: '10',
      isolated: true,
      entryPrice: 4.378,
      maxNotional: '250000',
      positionSide: 'BOTH',
      positionAmt: -30,
      notional: -137.31,
      isolatedWallet: 13.15510562,
      updateTime: 1665734403111,
      bidNotional: '0',
      askNotional: '0'
    },

(ок) 1. считать кол-во по полю positionAmt
(ок) 2. если сумма открытых сделок > 0 (или > 4) , то не входим
  
console.log('getAccountInformation: ', await client.getAccountInformation())

Account Information V2 (USER_DATA)
https://binance-docs.github.io/apidocs/futures/en/#account-information-v2-user_data

getAccountInformation(): Promise<FuturesAccountInformation> {
    return this.getPrivate('fapi/v2/account');
  }
  
---------------------------- 
// плечо
setLeverage(params: SetLeverageParams): Promise<SetLeverageResult> {
    return this.postPrivate('fapi/v1/leverage', params);
  }
  
// скорее всего не то что нужно
setIsolatedPositionMargin(
    params: SetIsolatedMarginParams
  ): Promise<SetIsolatedMarginResult> {
    return this.postPrivate('fapi/v1/positionMargin', params);
  }

----  
Account Trade List (USER_DATA) - история сделок
https://binance-docs.github.io/apidocs/futures/en/#account-trade-list-user_data

getAccountTrades(
    params: SymbolFromPaginatedRequestFromId
  ): Promise<FuturesPositionTrade[]> {
    return this.getPrivate('fapi/v1/userTrades', params);
  }